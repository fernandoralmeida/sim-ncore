@using Microsoft.AspNetCore.Identity
@using Sim.Identity.Entity
@using Sim.Application.Interfaces

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IAppServiceStatusAtendimento MeuStatus
@inject HttpContextAccessor httpcontextaccessor


@{
    var _user = UserManager.Users.FirstOrDefault(m => m.UserName == User.Identity.Name);
    var _lstatus = await MeuStatus.MyStatusAsync(User.Identity.Name);
    var _status = _lstatus == null ? false : _lstatus.Online;
    var _idstatus = _lstatus == null ? Guid.Empty : _lstatus.Id;
    var DisplayName = _user.Name;
    var DisplayLastName = _user.LastName;
    var account_color = "";
    var _mytheme = _user.Theme == null ? "light" : _user.Theme;
    var _changetheme = _mytheme == "light" ? "dark" : "light";
    var _icon = _mytheme == "dark" ? "dark_mode" : "light_mode";
}
<input id="meustatusonline" type="text" value="@_idstatus" hidden />

<div class="navbar-fixed">
    <nav class="navbar z-depth-0">
        <div class="nav-wrapper">
            <a href="#" data-target="sidenav-left" class="sidenav-trigger hide-on-extra-large-only"><i
                    class="material-icons">menu</i></a>



            <div class="left"><img src="~/icons/sedempi-166p.svg" width="120px" style="padding-top: 20px; padding-left: 10px;"
                    alt="SEDEMPI" /></div>
            <a class="navbar-page-name">
                @ViewData["Title"]</a>
            <ul class="right hide-on-med-and-down">
                @if (SignInManager.IsSignedIn(User))
                {
                    @if (!_status)
                    { account_color = "offline"; }
                    else
                    { account_color = "online"; }

                    <li class="dropdown-trigger mgn-r-10" data-target="dropdownuser">
                        <a id="btnstatus" class="@account_color" href="#">@DisplayName<i
                                class="left material-icons">person</i></a>
                    </li>
                }
            </ul>
        </div>
    </nav>
</div>

<div id="dropsection" class="dropdown-content rounded-default row">
    <div>
        <a href="#">Sebrae</a>
    </div>
    <div>
        <a href="#">PAT</a>
    </div>
    <div><a href="#">Banco do Povo</a></div>
</div>

<div id="dropdownuser" class="dropdown-content rounded-default row">
    <div class="center-align"><a class="grey-text" asp-area="Identity" asp-page="/Account/Manage/Index">Meu Perfil</a>
    </div>
    <div class="divider"></div>
    <div class="center-align">
        <a id="settheme" data-id="@_user.UserName" data-theme="@_changetheme" href="#"><i
                class="material-icons online">@_icon</i></a>
    </div>
    <div class="divider"></div>
    <div class="center-align pdn-h-10">
        <div class="switch" title="Alterar meu status"><label>OFF<input id="chkstatus" checked="@_status"
                    type="checkbox" onclick="myStatus()" /><span class="lever"></span>ON</label></div>
    </div>
    <div class="divider"></div>
    <div><a asp-area="Identity" asp-page="/Account/Logout" class="grey-text">Sair<i
                class="left material-icons">logout</i></a></div>
</div>

<script>
    function myStatus() {
        var st = document.querySelector('#chkstatus');
        var uid = document.querySelector('#meustatusonline').value;
        const btnstatus = document.querySelector('#btnstatus');
        btnstatus.classList.remove('online');
        btnstatus.classList.remove('offline');
        if (!st.checked) { $('#btnstatus').addClass('offline'); }
        else { $('#btnstatus').addClass('online'); }
        var formData = { id: uid, val: st.checked };
        $.get('/Identity/OnlineStatus', { id: uid, val: st.checked },
            function (returnedData) {
            });
    }
</script>

