@using Sim.Identity.Entity
@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

    <nav class="navbar">
        <div class="nav-wrapper white">
            <ul class="right">
                <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a class="grey-text" id="profile" asp-page="./Index">Perfil</a></li>
                <li class="@ManageNavPages.EmailNavClass(ViewContext)"><a class="grey-text" id="email" asp-page="./Email">Email</a></li>
                <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a class="grey-text" id="change-password" asp-page="./ChangePassword">Senha</a></li>
                @if (hasExternalLogins)
                {
                    <li id="external-logins" class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a id="external-login" class="grey-text" asp-page="./ExternalLogins">Logins externos</a></li>
                }
                <li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" hidden><a hidden class="grey-text" id="two-factor" asp-page="./TwoFactorAuthentication">Autenticação de dois fatores</a></li>
                <li class="@ManageNavPages.PersonalDataNavClass(ViewContext)"><a class="grey-text" id="personal-data" asp-page="./PersonalData">Dados pessoais</a></li>
            </ul>
        </div>
    </nav>
